[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About",
    "section": "",
    "text": "This is a Quarto website template themed to (largely) conform with the web visual identity guidelines set by the University of Wisconsin-Madison. This template is specifically for Quarto sites but could easily be used to customize notebooks, presentations, blogs, and other publishing mediums supported by Quarto. This template site covers some basic functionality of Quarto sites: please review the Quarto docs for the full range of Quarto capabilities to fit your needs.\n\n\n\n\n\n\nThis template is not intended to exactly mimic UW-branded sites but instead to provide Quarto users at UW-Madison a bare-bones site template with some fundamental UW theming. This template is not intended to be comprehensive: you may need to customize it to fit your specific needs.\n\n\n\n\nStructure\nThis template is primarily styled with two files:\n\ncustom.scss: an SCSS file that contains most of the customizing elements for the template, including importing UW-approved fonts from Google Fonts and styling various elements of the site using UW brand primary and secondary colors;\nsetup.R: an R script that loads common packages and can be used to pass brand elements to R code throughout the site in order to customize visual elements such as plots.\n\nThe images directory contains base images for the template, such as the UW shield logo for the header banner and a favicon for browser tabs.\nOther settings, such as code chunk behavior and navbar contents, can be changed in _quarto.yml. sidebar.yml controls the structure of the left-hand side navigation bar, including which pages are navigable via the bar.",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "code.html",
    "href": "code.html",
    "title": "Code",
    "section": "",
    "text": "Code chunks are set, by default in _quarto.yml, not to echo or print messages or warnings. These settings can be changed in that file.\nAn example R code chunk, with echoing enabled, is below:\n\n2 + 2\n\n[1] 4",
    "crumbs": [
      "Examples",
      "Code"
    ]
  },
  {
    "objectID": "plots.html",
    "href": "plots.html",
    "title": "Plots",
    "section": "",
    "text": "Static plots can be easily customized by creating a theme. The theme scatter_theme is defined for a simple scatter plot in setup.R, which is then sourced and applied to the example plot below. Colors variables can also be defined in setup.R and then passed to ggplot arguments to customize plot elements.\n\nsource('setup.R')\n\niris |&gt;\n  ggplot(aes(x = Sepal.Length, y = Sepal.Width)) +\n  geom_point(color = point_color) +\n  ggtitle('An Example Plot') +\n  scatter_theme\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nInteractive plots generated with Plotly will generally follow predefined themes but will not preserve custom fonts.",
    "crumbs": [
      "Examples",
      "Plots"
    ]
  }
]